{"version":3,"sources":["webpack.dev.conf.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,eAAR,CAAZ;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;AACA,IAAI,oBAAoB,QAAQ,6BAAR,CAAxB;;AAGA,OAAO,OAAP,GAAiB,MAAM,iBAAN,EAAyB;AACxC;;;AAGA;AACA,WAAS,aAL+B;AAMxC,UAAQ;AACN,UAAM,OAAO,GAAP,CAAW,UADX;AAEN,cAAU,MAAM,UAAN,CAAiB,qBAAjB,CAFJ;AAGN,mBAAe,MAAM,UAAN,CAAiB,mBAAjB;AAHT,GANgC;AAWxC,OAAK;AACH,aAAS,MAAM,UAAN,CAAiB;AACxB,iBAAW,OAAO,KAAP,CAAa,mBADA;AAExB,eAAS;AAFe,KAAjB;AADN,GAXmC;AAiBxC,WAAQ,CACN,IAAI,QAAQ,YAAZ,CAAyB;AACvB,mBAAe,OAAO,GAAP,CAAW;AADH,GAAzB,CADM,EAIN,IAAI,QAAQ,QAAR,CAAiB,cAArB,CAAoC;AAChC,cAAU;AACR,gBAAU;AADF;AADsB,GAApC,CAJM;;AAWN;AACA,MAAI,iBAAJ,CAAsB,MAAM,UAAN,CAAiB,8BAAjB,CAAtB,CAZM;AAaP;AACC,MAAI,iBAAJ,CAAsB;AACpB,cAAU,OAAO,GAAP,CAAW,KADD;AAEpB,cAAU,YAFU;AAGpB,YAAQ,IAHY;AAIpB,YAAQ;AACN,sBAAgB,IADV;AAEN,0BAAoB,IAFd;AAGN,6BAAuB;AACvB;AACA;AALM,KAJY;AAWpB,oBAAgB;AAXI,GAAtB,CAdM;AA2BN;AACA,MAAI,QAAQ,QAAR,CAAiB,kBAArB,CAAwC;AACtC,UAAM,QADgC;AAEtC,eAAW,mBAAU,MAAV,EAAkB,KAAlB,EAAyB;AAClC;AACA,aACA,OAAO,QAAP,IACA,QAAQ,IAAR,CAAa,OAAO,QAApB,CADA,IAEA,OAAO,QAAP,CAAgB,OAAhB,CACE,KAAK,IAAL,CAAU,SAAV,EAAqB,iBAArB,CADF,MAEM,CALN;AAOD;AAXqC,GAAxC,CA5BM;AAjBgC,CAAzB,CAAjB","file":"webpack.dev.conf-compiled.js","sourcesContent":["var path = require('path')\nvar config = require('../config')\nvar webpack = require('webpack')\nvar utils = require('./utils')\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\n\nmodule.exports = merge(baseWebpackConfig, {\n  /*module: {\n    loaders: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap })\n  },*/\n  // eval-source-map is faster for development\n  devtool: '#source-map',\n  output: {\n    path: config.dev.assetsRoot,\n    filename: utils.assetsPath('js/[name].[hash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[hash].js')\n  },\n  vue: {\n    loaders: utils.cssLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true\n    })\n  },\n  plugins:[\n    new webpack.DefinePlugin({\n      'process.env': config.dev.env\n    }),\n    new webpack.optimize.UglifyJsPlugin({\n        compress: {\n          warnings: false\n        }\n      }\n    ),\n\n    // extract css into its own file\n    new ExtractTextPlugin(utils.assetsPath('css/[name].[contenthash].css')),\n\t  // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.dev.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      chunksSortMode: 'dependency'\n    }),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module, count) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n        module.resource &&\n        /\\.js$/.test(module.resource) &&\n        module.resource.indexOf(\n          path.join(__dirname, '../node_modules')\n        ) === 0\n        )\n      }\n    }),\n  ],\n})\n"]}