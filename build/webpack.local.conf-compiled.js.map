{"version":3,"sources":["webpack.local.conf.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,eAAR,CAAZ;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;AACA,IAAI,oBAAoB,QAAQ,qBAAR,CAAxB;;AAGA;AACA,oBAAY,kBAAkB,KAA9B,EAAqC,OAArC,CAA6C,UAAU,IAAV,EAAgB;AAC3D,oBAAkB,KAAlB,CAAwB,IAAxB,IAAgC,CAAC,oBAAD,EAAuB,MAAvB,CAA8B,kBAAkB,KAAlB,CAAwB,IAAxB,CAA9B,CAAhC;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,MAAM,iBAAN,EAAyB;AACxC;;;AAGA;AACA,WAAS,kBAL+B;AAMxC,UAAQ;AACN,UAAM,OAAO,KAAP,CAAa,UADb;AAEN,gBAAY,OAAO,KAAP,CAAa,gBAFnB;AAGN,cAAU;AAHJ,GANgC;AAWxC,WAAQ,CACN,IAAI,QAAQ,YAAZ,CAAyB;AACvB,mBAAe,OAAO,KAAP,CAAa;AADL,GAAzB,CADM;AAIF;AACH,MAAI,QAAQ,QAAR,CAAiB,oBAArB,EALK,EAML,IAAI,QAAQ,0BAAZ,EANK,EAOL,IAAI,QAAQ,cAAZ,EAPK;AAQL;AACC,MAAI,iBAAJ,CAAsB;AAClB,cAAU,OAAO,KAAP,CAAa,KADL,EACW;AAC7B,cAAU,YAFQ;AAGlB,YAAQ;AAHU,GAAtB,CATI,CAXgC;AA0BxC,UAAQ;AACN,iBAAa,IADP;AAEN,eAAW;AAFL;AA1BgC,CAAzB,CAAjB","file":"webpack.local.conf-compiled.js","sourcesContent":["var config = require('../config')\nvar webpack = require('webpack')\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n\n\n// add hot-reload related code to entry chunks\nObject.keys(baseWebpackConfig.entry).forEach(function (name) {\n  baseWebpackConfig.entry[name] = ['./build/dev-client'].concat(baseWebpackConfig.entry[name])\n})\n\nmodule.exports = merge(baseWebpackConfig, {\n  /*module: {\n    loaders: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap })\n  },*/\n  // eval-source-map is faster for development\n  devtool: '#eval-source-map',\n  output: {\n    path: config.local.assetsRoot,\n    publicPath: config.local.assetsPublicPath,\n    filename: '[name].bundle.js'\n  },\n  plugins:[\n    new webpack.DefinePlugin({\n      'process.env': config.local.env\n    }),\n        // https://github.com/glenjamin/webpack-hot-middleware#installation--usage\n    \tnew webpack.optimize.OccurenceOrderPlugin(),\n    \tnew webpack.HotModuleReplacementPlugin(),\n\t    new webpack.NoErrorsPlugin(),\n\t    // https://github.com/ampedandwired/html-webpack-plugin\n      new HtmlWebpackPlugin({\n          filename: config.local.index,//output index in '/' directory\n          template: 'index.html',\n          inject: true\n      })\n    ],\n  eslint: {\n    emitWarning: true,\n    emitError: false\n  }\n})\n"]}